{"version":3,"sources":["NotefulForm/NotefulForm.js","ApiContext.js","config.js","AddFolder/AddFolder.js","CircleButton/CircleButton.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddNote/AddNote.js","App/App.js","index.js"],"names":["NotefulForm","props","className","otherProps","Object","objectWithoutProperties","react_default","a","createElement","assign","join","action","React","createContext","notes","folders","addFolder","addNote","deleteNote","config","API_ENDPOINT","AddFolder","handleSubmit","e","preventDefault","folder","foldername","target","value","fetch","concat","method","headers","content-type","body","JSON","stringify","then","res","ok","json","Promise","reject","_this","context","history","push","id","catch","error","console","NotefulForm_NotefulForm","onSubmit","this","htmlFor","type","name","Component","defaultProps","contextType","ApiContext","NavCircleButton","tag","childrenm","objectSpread","children","findNote","arguments","length","undefined","noteId","find","note","NoteListNav","state","add","handleAddFolder","setState","forceUpdate","_this2","_this$context","_this$context$folders","_this$context$notes","map","key","NavLink","to","folderId","filter","folderid","countNotesForFolder","Link","onClick","react_fontawesome_index_es","icon","AddFolder_AddFolder_AddFolder","handleAdd","NotePageNav","noteid","match","params","findFolder","role","goBack","Note","handleClickDelete","onDeleteNote","_this$props","notename","modified","format","NoteListMain","notesForFolder","getNotesForFolder","parseInt","Note_Note_Note","NotePageMain","handleDeleteNote","content","split","para","i","AddNote","newNote","Date","App","toConsumableArray","handleAddNote","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","renderNavRoutes","renderMainRoutes","library","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1abc95e4.chunk.js","sourcesContent":["import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => { },\n  addNote: () => { },\n  deleteNote: () => { },\n})","export default {\n  API_ENDPOINT: 'https://noteful-clean.herokuapp.com/'\n}","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddFolder.css'\n\nexport default class AddFolder extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      foldername: e.target['folder-name'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder-name' />\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}","import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps = {\n  tag: 'a',\n}","export const findFolder = (folders = [], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes = [], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes = [], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderid === folderId)\n)\n\nexport const countNotesForFolder = (notes = [], folderId) =>\n  notes.filter(note => note.folderid === folderId).length","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport AddFolder from '../AddFolder/AddFolder';\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  state = {\n    add: false,\n  };\n\n  static contextType = ApiContext;\n\n  handleAddFolder = () => {\n    this.setState({ add: !this.state.add })\n    this.forceUpdate()\n  };\n  render() {\n    const { folders = [], notes = [] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.foldername}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n            onClick={() => this.handleAddFolder()}\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n          {this.state.add && <AddFolder handleAdd={this.handleAddFolder} />}\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders } = this.context\n    const { noteid } = this.props.match.params\n    const note = findNote(notes, noteid) || {};\n    const folder = findFolder(folders, note.folderid)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.foldername}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\n\nexport default class Note extends React.Component {\n  static defaultProps = {\n    onDeleteNote: () => { },\n  }\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteid = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteid}`, {\n      method: 'DELETE',\n    })\n      .then(() => {\n        this.context.deleteNote(noteid)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteid)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { notename, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${id}`}>\n            {notename}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderid } = this.props.match.params\n    const { notes = [] } = this.context\n    const notesForFolder = getNotesForFolder(notes, parseInt(folderid))\n    \n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                notename={note.notename}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteid => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes = [] } = this.context\n    const { noteid } = this.props.match.params\n    const note = findNote(notes, parseInt(noteid)) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          notename={note.notename}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}","import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './AddNote.css'\n\nexport default class AddNote extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const newNote = {\n      notename: e.target['note-name'].value,\n      content: e.target['note-content'].value,\n      folderid: e.target['note-folder-id'].value,\n      modified: new Date(),\n    }\n    fetch(`${config.API_ENDPOINT}/notes`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newNote),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(note => {\n        this.context.addNote(note)\n        this.props.history.push(`/folder/${note.folderid}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    const { folders = [] } = this.context\n    return (\n      <section className='AddNote'>\n        <h2>Create a note</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='note-name-input'>\n              Name\n            </label>\n            <input type='text' id='note-name-input' name='note-name' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-content-input'>\n              Content\n            </label>\n            <textarea id='note-content-input' name='note-content' />\n          </div>\n          <div className='field'>\n            <label htmlFor='note-folder-select'>\n              Folder\n            </label>\n            <select id='note-folder-select' name='note-folder-id'>\n              <option value={null}>...</option>\n              {folders.map(folder =>\n                <option key={folder.id} value={folder.id}>\n                  {folder.foldername}\n                </option>\n              )}\n            </select>\n          </div>\n          <div className='buttons'>\n            <button type='submit'>\n              Add note\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { Route, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport NoteListNav from '../NoteListNav/NoteListNav'\nimport NotePageNav from '../NotePageNav/NotePageNav'\nimport NoteListMain from '../NoteListMain/NoteListMain'\nimport NotePageMain from '../NotePageMain/NotePageMain'\nimport AddFolder from '../AddFolder/AddFolder'\nimport AddNote from '../AddNote/AddNote'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './App.css'\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: [],\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(`${config.API_ENDPOINT}/notes`),\n      fetch(`${config.API_ENDPOINT}/folders`)\n    ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok)\n          return notesRes.json().then(e => Promise.reject(e))\n        if (!foldersRes.ok)\n          return foldersRes.json().then(e => Promise.reject(e))\n\n        return Promise.all([\n          notesRes.json(),\n          foldersRes.json(),\n        ])\n      })\n      .then(([notes, folders]) => {\n        this.setState({ notes, folders })\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  handleAddFolder = folder => {\n    this.setState({\n      folders: [\n        ...this.state.folders,\n        folder\n      ]\n    })\n  }\n\n  handleAddNote = note => {\n    this.setState({\n      notes: [\n        ...this.state.notes,\n        note\n      ]\n    })\n  }\n\n  handleDeleteNote = noteid => {\n    this.setState({\n      notes: this.state.notes.filter(note => note.id !== noteid)\n    })\n  }\n\n  renderNavRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderid'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListNav}\n          />\n        )}\n        <Route\n          path='/note/:noteid'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-folder'\n          component={NotePageNav}\n        />\n        <Route\n          path='/add-note'\n          component={NotePageNav}\n        />\n      </>\n    )\n  }\n\n  renderMainRoutes() {\n    return (\n      <>\n        {['/', '/folder/:folderid'].map(path =>\n          <Route\n            exact\n            key={path}\n            path={path}\n            component={NoteListMain}\n          />\n        )}\n        <Route\n          path='/note/:noteid'\n          component={NotePageMain}\n        />\n        <Route\n          path='/add-folder'\n          component={AddFolder}\n        />\n        <Route\n          path='/add-note'\n          component={AddNote}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const value = {\n      notes: this.state.notes,\n      folders: this.state.folders,\n      addFolder: this.handleAddFolder,\n      addNote: this.handleAddNote,\n      deleteNote: this.handleDeleteNote,\n    }\n    return (\n      <ApiContext.Provider value={value}>\n        <div className='App'>\n          <nav className='App__nav'>\n            {this.renderNavRoutes()}\n          </nav>\n          <header className='App__header'>\n            <h1>\n              <Link to='/'>Noteful</Link>\n              {' '}\n              <FontAwesomeIcon icon='check-double' />\n            </h1>\n          </header>\n          <main className='App__main'>\n            {this.renderMainRoutes()}\n          </main>\n        </div>\n      </ApiContext.Provider>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)"],"sourceRoot":""}